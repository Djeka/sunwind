M:matrix(
1 [ 0, 0,0, 1,0,  1,   0, 0,1,0,0,  1,   1, 0,0,0,-1, 0],
2 [-1, 0,0,-1,0,  0,   0, 1,0,0,0, -1,  -1,  0,-1, 0,0,  0],
3 [ 0, 0,0,0, 1, -1,   0, 0,0,0,1, -1,   0,  0, 0, 0,1, -1],
4 [ 1, 0,0,0,-1,  0,   0, 0,0,1,0,  1,   0,  0, 1, 0,0,  1],
5 [ 0, 1,0,0,0, -1,  -1, 0,-1,0,0, 0,  -1,  0, 0,-1,0, 0],
6 [ 1,-1,0,0,0,  0,   1, -1,0,0,0, 0,   1, -1, 0, 0,0, 0],
7 [ 0, 0, 1,0,0,  1,   1, 0,0,0,-1, 0,   0,  0, 0, 1,0, 1],
[-1, 0,-1,0,0,  0,  -1, 0,0,-1,0, 0,   0,  1, 0, 0,0, -1]
);


eq1: (Bxcbf - (Axb + Bxb - Txb + Kxb)) + (Bycfb - (Ayb + Byb + Tyb - Kyb)) + ((Azf + Bzf - Tzf - Kzf) - Bzcbb) = 0;
eq2: ((Axf + Bxf - Txf + Kxf) - Bxcbf) + (Bycff - (Ayb + Byb + Tyb + Kyb)) + ((Azf + Bzf + Tzf - Kzf) - Bzcfb) = 0;
eq3: (Bxcbb - (Axb + Bxb - Txb - Kxb)) + (Bycbb - (Ayb + Byb - Tyb - Kyb)) + (Bzcbb - (Azb + Bzb - Tzb - Kzb)) = 0;
eq4: ((Axf + Bxf - Txf - Kxf) - Bxcbb) + (Bycbf - (Ayb + Byb - Tyb + Kyb)) + (Bzcfb - (Azb + Bzb + Tzb - Kzb)) = 0;
eq5: (Bxcff - (Axb + Bxb + Txb + Kxb)) + ((Ayf + Byf + Tyf - Kyf) - Bycfb) + ((Azf + Bzf - Tzf + Kzf) - Bzcbf) = 0;
eq6: ((Axf + Bxf + Txf + Kxf) - Bxcff) + ((Ayf + Byf + Tyf + Kyf) - Bycff) + ((Azf + Bzf + Tzf + Kzf) - Bzcff) = 0;
eq7: (Bxcfb - (Axb + Bxb + Txb - Kxb)) + ((Ayf + Byf - Tyf - Kyf) - Bycbb) + (Bzcbf - (Azb + Bzb - Tzb + Kzb)) = 0;
eq8: ((Axf + Bxf + Txf - Kxf) - Bxcfb) + ((Ayf + Byf - Tyf + Kyf) - Bycbf) + (Bzcff - (Azb + Bzb + Tzb + Kzb)) = 0;


s: solve([eq1, eq2, eq3, eq4, eq5, eq6, eq7],[Bxcff, Bxcfb, Bxcbf, Bxcbb, Bycff, Bycbf, Bzcff]);

x1 - Bycfb
x2 - Bycbb
x3 - Bzcfb
x4 - Bzcbf
x5 - Bzcbb
x6 - Axf
x7 - Axb
x8 - Ayf
x9 - Ayb
x10 - Azf
x11 - Azb

Bxcff : Bycfb + Bzcbf + Axb - Ayf - Azf   + Tzf-Tyf+Txb-Kzf+Kyf+Kxb-Bzf+Bxb-Byf;

qp.set_a(x1,0,1);
qp.set_a(x4,0,1);
qp.set_a(x7,0,1);
qp.set_a(x8,0,-1);
qp.set_a(x10,0,-1);
qp.set_r(0, CGAL::SMALLER);
qp.set_b(0, std::max(Bxf, Bxb) - (Tzf-Tyf+Txb-Kzf+Kyf+Kxb-Bzf+Bxb-Byf));

qp.set_a(x1, 1,1);
qp.set_a(x4, 1,1);
qp.set_a(x7, 1,1);
qp.set_a(x8, 1,-1);
qp.set_a(x10,1,-1);
qp.set_r(1, CGAL::LARGER);
qp.set_b(1, std::min(Bxf, Bxb) - (Tzf-Tyf+Txb-Kzf+Kyf+Kxb-Bzf+Bxb-Byf)); 


Bxcfb : Bycbb - Bzcbf + Axb - Ayf + Azb   + Tyf-Tzb+Txb+Kzb+Kyf-Kxb+Bzb-Byf+Bxb;

qp.set_a(x2,2,1);
qp.set_a(x4,2,-1);
qp.set_a(x7,2,1);
qp.set_a(x8,2,-1);
qp.set_a(x11,2,1);
qp.set_r(2, CGAL::SMALLER);
qp.set_b(2, std::max(Bxf, Bxb) - (Tyf-Tzb+Txb+Kzb+Kyf-Kxb+Bzb-Byf+Bxb));

qp.set_a(x2,3,1);
qp.set_a(x4,3,-1);
qp.set_a(x7,3,1);
qp.set_a(x8,3,-1);
qp.set_a(x11,3,1);
qp.set_r(3, CGAL::LARGER);
qp.set_b(3, std::min(Bxf, Bxb) - (Tyf-Tzb+Txb+Kzb+Kyf-Kxb+Bzb-Byf+Bxb));


Bxcbf :-Bycfb + Bzcbb + Axb + Ayb - Azf   + Tzf+Tyb-Txb+Kzf-Kyb+Kxb-Bzf+Byb+Bxb;
qp.set_a(x1,4,-1);
qp.set_a(x5,4,1);
qp.set_a(x7,4,1);
qp.set_a(x9,4,1);
qp.set_a(x10,4,-1);
qp.set_r(4, CGAL::SMALLER);
qp.set_b(4, std::max(Bxf, Bxb) - (Tzf+Tyb-Txb+Kzf-Kyb+Kxb-Bzf+Byb+Bxb));

qp.set_a(x1,5,-1);
qp.set_a(x5,5,1);
qp.set_a(x7,5,1);
qp.set_a(x9,5,1);
qp.set_a(x10,5,-1);
qp.set_r(5, CGAL::LARGER);
qp.set_b(5, std::min(Bxf, Bxb) - (Tzf+Tyb-Txb+Kzf-Kyb+Kxb-Bzf+Byb+Bxb));


Bxcbb :-Bycbb - Bzcbb + Axb + Ayb + Azb   + Bzb+Byb+Bxb-Tzb-Tyb-Txb-Kzb-Kyb-Kxb;
qp.set_a(x2,6,-1);
qp.set_a(x5,6,-1);
qp.set_a(x7,6,1);
qp.set_a(x9,6,1);
qp.set_a(x11,6,1);
qp.set_r(6, CGAL::SMALLER);
qp.set_b(6, std::max(Bxf, Bxb) - (Bzb+Byb+Bxb-Tzb-Tyb-Txb-Kzb-Kyb-Kxb));

qp.set_a(x2,7,-1);
qp.set_a(x5,7,-1);
qp.set_a(x7,7,1);
qp.set_a(x9,7,1);
qp.set_a(x11,7,1);
qp.set_r(7, CGAL::LARGER);
qp.set_b(7, std::min(Bxf, Bxb) - (Bzb+Byb+Bxb-Tzb-Tyb-Txb-Kzb-Kyb-Kxb));


Bycff :-Bycfb + Bzcfb + Bzcbb - Axf + Axb + 2*Ayb - 2*Azf   + 2*Tyb+Txf-Txb+2*Kzf-Kxf+Kxb-2*Bzf+2*Byb-Bxf+Bxb;
qp.set_a(x1,8,-1);
qp.set_a(x3,8,1);
qp.set_a(x5,8,1);
qp.set_a(x6,8,-1);
qp.set_a(x7,8,1);
qp.set_a(x9,8,-2);
qp.set_a(x10,8,-2);
qp.set_r(8, CGAL::SMALLER);
qp.set_b(8, std::max(Byf, Byb) - (2*Tyb+Txf-Txb+2*Kzf-Kxf+Kxb-2*Bzf+2*Byb-Bxf+Bxb));

qp.set_a(x1,9,-1);
qp.set_a(x3,9,1);
qp.set_a(x5,9,1);
qp.set_a(x6,9,-1);
qp.set_a(x7,9,1);
qp.set_a(x9,9,-2);
qp.set_a(x10,9,-2);
qp.set_r(9, CGAL::LARGER);
qp.set_b(9, std::min(Byf, Byb) - (2*Tyb+Txf-Txb+2*Kzf-Kxf+Kxb-2*Bzf+2*Byb-Bxf+Bxb));


Bycbf :-Bycbb - Bzcfb - Bzcbb - Axf + Axb + 2*Ayb + 2*Azb   + 2*Byb-Bxf+Bxb+2*Bzb-2*Tyb+Txf-Txb-2*Kzb+Kxf-Kxb;
qp.set_a(x2,10,-1);
qp.set_a(x3,10,-1);
qp.set_a(x5,10,-1);
qp.set_a(x6,10,-1);
qp.set_a(x7,10,1);
qp.set_a(x9,10,2);
qp.set_a(x11,10,2);
qp.set_r(10, CGAL::SMALLER);
qp.set_b(10, std::max(Byf, Byb) - (2*Byb-Bxf+Bxb+2*Bzb-2*Tyb+Txf-Txb-2*Kzb+Kxf-Kxb));

qp.set_a(x2,11,-1);
qp.set_a(x3,11,-1);
qp.set_a(x5,11,-1);
qp.set_a(x6,11,-1);
qp.set_a(x7,11,1);
qp.set_a(x9,11,2);
qp.set_a(x11,11,2);
qp.set_r(11, CGAL::LARGER);
qp.set_b(11, std::min(Byf, Byb) - (2*Byb-Bxf+Bxb+2*Bzb-2*Tyb+Txf-Txb-2*Kzb+Kxf-Kxb));


Bzcff :-Bzcfb - Bzcbf - Bzcbb + 2*Axf - 2*Axb + 2*Ayf - 2*Ayb + 4*Azf   + 2*Tyf-2*Tyb+2*Kxf-2*Kxb+4*Bzf+2*Byf-2*Byb+2*Bxf-2*Bxb;

qp.set_a(x3,12,-1);
qp.set_a(x4,12,-1);
qp.set_a(x5,12,-1);
qp.set_a(x6,12,2);
qp.set_a(x7,12,-2);
qp.set_a(x8,12,2);
qp.set_a(x9,12,-2);
qp.set_a(x10,12,4);
qp.set_r(12, CGAL::SMALLER);
qp.set_b(12, std::max(Bzf, Bzb) - (2*Tyf-2*Tyb+2*Kxf-2*Kxb+4*Bzf+2*Byf-2*Byb+2*Bxf-2*Bxb));

qp.set_a(x3,13,-1);
qp.set_a(x4,13,-1);
qp.set_a(x5,13,-1);
qp.set_a(x6,13,2);
qp.set_a(x7,13,-2);
qp.set_a(x8,13,2);
qp.set_a(x9,13,-2);
qp.set_a(x10,13,4);
qp.set_r(13, CGAL::LARGER);
qp.set_b(13, std::min(Bzf, Bzb) - (2*Tyf-2*Tyb+2*Kxf-2*Kxb+4*Bzf+2*Byf-2*Byb+2*Bxf-2*Bxb));


qp.set_a(x1,14,1);
qp.set_r(14, CGAL::SMALLER);
qp.set_b(14, std::max(Byf, Byb));
qp.set_a(x1,15,1);
qp.set_r(15, CGAL::LARGER);
qp.set_b(15, std::min(Byf, Byb));

qp.set_a(x2,15,1);
qp.set_r(15, CGAL::SMALLER);
qp.set_b(15, std::max(Byf, Byb));
qp.set_a(x2,16,1);
qp.set_r(16, CGAL::LARGER);
qp.set_b(16, std::min(Byf, Byb));

qp.set_a(x3,17,1);
qp.set_r(17, CGAL::SMALLER);
qp.set_b(17, std::max(Bzf, Bzb));
qp.set_a(x3,18,1);
qp.set_r(18, CGAL::LARGER);
qp.set_b(18, std::min(Bzf, Bzb));

qp.set_a(x4,19,1);
qp.set_r(19, CGAL::SMALLER);
qp.set_b(19, std::max(Bzf, Bzb));
qp.set_a(x4,20,1);
qp.set_r(20, CGAL::LARGER);
qp.set_b(20, std::min(Bzf, Bzb));

qp.set_a(x5,21,1);
qp.set_r(21, CGAL::SMALLER);
qp.set_b(21, std::max(Bzf, Bzb));
qp.set_a(x5,22,1);
qp.set_r(22, CGAL::LARGER);
qp.set_b(22, std::min(Bzf, Bzb));






qp.set_d(x9,x8, -12);
qp.set_d(x9,x7, 42);
qp.set_d(x9,x6, -34);
qp.set_d(x9,x5, 10);
qp.set_d(x9,x4, 8);
qp.set_d(x9,x3, 10);
qp.set_d(x9,x2, -12);
qp.set_d(x11,x9, 16);
qp.set_d(x10,x9, -60);
qp.set_d(x9,x1, -16);
qp.set_d(x8,x7, -22);
qp.set_d(x8,x6, 14);
qp.set_d(x8,x5, -6);
qp.set_d(x8,x4, -8);
qp.set_d(x8,x3, -6);
qp.set_d(x8,x2, -4);
qp.set_d(x10,x8, 36);
qp.set_d(x8,x1, -8);
qp.set_d(x7,x6, -24);
qp.set_d(x7,x5, 8);
qp.set_d(x7,x4, 12);
qp.set_d(x7,x3, 8);
qp.set_d(x7,x2, -6);
qp.set_d(x11,x7, 10);
qp.set_d(x10,x7, -54);
qp.set_d(x7,x1, -2);
qp.set_d(x6,x5, -8);
qp.set_d(x6,x4, -4);
qp.set_d(x6,x3, -8);
qp.set_d(x6,x2, 2);
qp.set_d(x11,x6, -6);
qp.set_d(x10,x6, 42);
qp.set_d(x6,x1, 6);
qp.set_d(x5,x4, 4);
qp.set_d(x5,x3, 12);
qp.set_d(x5,x2, 8);
qp.set_d(x11,x5, -14);
qp.set_d(x10,x5, -30);
qp.set_d(x5,x1, -8);
qp.set_d(x4,x3, 4);
qp.set_d(x4,x2, -4);
qp.set_d(x11,x4, -6);
qp.set_d(x10,x4, -22);
qp.set_d(x4,x1, 4);
qp.set_d(x3,x2, 4);
qp.set_d(x11,x3, -12);
qp.set_d(x10,x3, -28);
qp.set_d(x3,x1, -4);
qp.set_d(x11,x2, -8);
qp.set_d(x11,x10, 8);
qp.set_d(x10,x1, 8);


qp.set_c(x1, 2*C9-2*C4-2*C3+2*C2-2*C14-2*C13+2*C10+2*C1);
qp.set_c(x2, 2*C8+2*C7+2*C22+2*C21-2*C20-2*C19-2*C16-2*C15);
qp.set_c(x3, -2*C6-2*C5+2*C4+2*C3-2*C16-2*C15+2*C12+2*C11);
qp.set_c(x4, -2*C8-2*C7-2*C6-2*C5+2*C2+2*C18+2*C17+2*C1);
qp.set_c(x5, -2*C6-2*C5+2*C4+2*C3+2*C24+2*C23-2*C20-2*C19-2*C16-2*C15+2*C14 + 2*C13);
qp.set_c(x6, -2*C7+4*C6+4*C5-2*C4-2*C3-2*C16-2*C15+2*C1);
qp.set_c(x7, 2*C7-4*C6-4*C5+2*C4+2*C3+4*C20+4*C2+2*C16+4*C13+2*C15+2*C1);
qp.set_c(x8, -2*C9-2*C8-2*C7+4*C6+4*C5+2*C3-2*C2-2*C1);
qp.set_c(x9, -4*C6-4*C5+6*C4+4*C3+2*C22-2*C21+2*C20+2*C19+2*C16+6*C15+2*C14+2*C13-2*C10);
qp.set_c(x10, 8*C6-4*C3+10*C5-4*C4-2*C2-2*C13-2*C14-2*C11-2*C1);
qp.set_c(x11, 2*C8+2*C7+2*C6-2*C23+2*C24+2*C20+2*C19-2*C18+2*C17+4*C16+4*C15-2*C12);

qp.set_d(x1, x1, 8);
qp.set_d(x2, x2, 8);
qp.set_d(x3, x3, 8);
qp.set_d(x4, x4, 8);
qp.set_d(x5, x5, 12);
qp.set_d(x6, x6, 14);
qp.set_d(x7, x7, 26);
qp.set_d(x8, x8, 14);
qp.set_d(x9, x9, 38);
qp.set_d(x10, x10, 54);
qp.set_d(x11, x11, 18);

qp.set_c0(C9**2+C8**2+C7**2+C6**2+C5**2+C4**2+C3**2+C24**2+C23**2+C22**2+C21**2+C20**2+C2**2+C19**2+C18**2+C17**2+C16**2+C15**2+C14**2+C13**2+C12**2+C11**2+C10**2+C1**2);



min(min(min(Bxfff, Bxffb), min(Bxfbf, Bxfbb)),Bxf);
max(max(max(Bxfff, Bxffb), max(Bxfbf, Bxfbb)),Bxf);

min(min(min(Byfff, Byffb), min(Byfbf, Byfbb)),Byf);
max(max(max(Byfff, Byffb), max(Byfbf, Byfbb)),Byf);

min(min(min(Bzfff, Bzffb), min(Bzfbf, Bzfbb)),Bzf);
max(max(max(Bzfff, Bzffb), max(Bzfbf, Bzfbb)),Bzf);